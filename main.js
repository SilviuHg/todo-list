(()=>{"use strict";var t={426:(t,e,n)=>{n.d(e,{Z:()=>i});var r=n(537),o=n.n(r),c=n(645),a=n.n(c)()(o());a.push([t.id,"*,\n*::before,\n*::after {\n  box-sizing: border-box;\n  padding: 0;\n  margin: 0;\n}\n\nbutton {\n  padding: 10px;\n  cursor: pointer;\n}\n\n.main {\n  display: grid;\n  grid-template-columns: 1fr 4fr;\n  min-height: calc(100vh - 39px);\n}\n\n.nav {\n  border: 1px solid black;\n  padding: 15px;\n}\n\n.default-projects {\n  display: flex;\n  flex-direction: column;\n}\n\n.user-projects {\n  display: flex;\n  flex-direction: column;\n}\n\n.projects-title {\n  margin: 15px 0px;\n}\n\n.default-list {\n  text-align: left;\n}\n\n.custom-project {\n  text-align: left;\n}\n\n.content {\n  border: 1px solid black;\n  padding: 20px;\n}\n\n.title-name {\n  margin-bottom: 15px;\n}\n\n.input-popup,\n.project-input-popup {\n  margin-bottom: 15px;\n}\n\n.tasks-list {\n  margin-bottom: 15px;\n}\n\n.fa-circle {\n  width: 20px;\n  height: 20px;\n}\n\n.fa-xmark {\n  width: 20px;\n  height: 20px;\n}\n\n.task-container,\n.project-container {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  gap: 10px;\n  margin-bottom: 15px;\n}\n\n.task-content {\n  width: 80%;\n}\n\n.project-content {\n  width: 100%;\n}\n\n.strike {\n  text-decoration: line-through;\n}\n\n.date.active {\n  display: none;\n}\n\n.input-date {\n  display: none;\n}\n\n.input-date.active {\n  display: block;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;;;EAGE,sBAAsB;EACtB,UAAU;EACV,SAAS;AACX;;AAEA;EACE,aAAa;EACb,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,8BAA8B;AAChC;;AAEA;EACE,uBAAuB;EACvB,aAAa;AACf;;AAEA;EACE,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,uBAAuB;EACvB,aAAa;AACf;;AAEA;EACE,mBAAmB;AACrB;;AAEA;;EAEE,mBAAmB;AACrB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,WAAW;EACX,YAAY;AACd;;AAEA;EACE,WAAW;EACX,YAAY;AACd;;AAEA;;EAEE,aAAa;EACb,mBAAmB;EACnB,8BAA8B;EAC9B,mBAAmB;EACnB,SAAS;EACT,mBAAmB;AACrB;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,6BAA6B;AAC/B;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,cAAc;AAChB",sourcesContent:["*,\r\n*::before,\r\n*::after {\r\n  box-sizing: border-box;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\nbutton {\r\n  padding: 10px;\r\n  cursor: pointer;\r\n}\r\n\r\n.main {\r\n  display: grid;\r\n  grid-template-columns: 1fr 4fr;\r\n  min-height: calc(100vh - 39px);\r\n}\r\n\r\n.nav {\r\n  border: 1px solid black;\r\n  padding: 15px;\r\n}\r\n\r\n.default-projects {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.user-projects {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.projects-title {\r\n  margin: 15px 0px;\r\n}\r\n\r\n.default-list {\r\n  text-align: left;\r\n}\r\n\r\n.custom-project {\r\n  text-align: left;\r\n}\r\n\r\n.content {\r\n  border: 1px solid black;\r\n  padding: 20px;\r\n}\r\n\r\n.title-name {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.input-popup,\r\n.project-input-popup {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.tasks-list {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.fa-circle {\r\n  width: 20px;\r\n  height: 20px;\r\n}\r\n\r\n.fa-xmark {\r\n  width: 20px;\r\n  height: 20px;\r\n}\r\n\r\n.task-container,\r\n.project-container {\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  gap: 10px;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.task-content {\r\n  width: 80%;\r\n}\r\n\r\n.project-content {\r\n  width: 100%;\r\n}\r\n\r\n.strike {\r\n  text-decoration: line-through;\r\n}\r\n\r\n.date.active {\r\n  display: none;\r\n}\r\n\r\n.input-date {\r\n  display: none;\r\n}\r\n\r\n.input-date.active {\r\n  display: block;\r\n}\r\n"],sourceRoot:""}]);const i=a},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",r=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),r&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),r&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,r,o,c){"string"==typeof t&&(t=[[null,t,void 0]]);var a={};if(r)for(var i=0;i<this.length;i++){var s=this[i][0];null!=s&&(a[s]=!0)}for(var d=0;d<t.length;d++){var l=[].concat(t[d]);r&&a[l[0]]||(void 0!==c&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=c),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},537:t=>{t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),c="/*# ".concat(o," */");return[e].concat([c]).join("\n")}return[e].join("\n")}},379:t=>{var e=[];function n(t){for(var n=-1,r=0;r<e.length;r++)if(e[r].identifier===t){n=r;break}return n}function r(t,r){for(var c={},a=[],i=0;i<t.length;i++){var s=t[i],d=r.base?s[0]+r.base:s[0],l=c[d]||0,p="".concat(d," ").concat(l);c[d]=l+1;var u=n(p),A={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)e[u].references++,e[u].updater(A);else{var m=o(A,r);r.byIndex=i,e.splice(i,0,{identifier:p,updater:m,references:1})}a.push(p)}return a}function o(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,o){var c=r(t=t||[],o=o||{});return function(t){t=t||[];for(var a=0;a<c.length;a++){var i=n(c[a]);e[i].references--}for(var s=r(t,o),d=0;d<c.length;d++){var l=n(c[d]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}c=s}}},569:t=>{var e={};t.exports=function(t,n){var r=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,n)=>{t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},795:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var c=n.sourceMap;c&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(c))))," */")),e.styleTagTransform(r,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},e={};function n(r){var o=e[r];if(void 0!==o)return o.exports;var c=e[r]={id:r,exports:{}};return t[r](c,c.exports,n),c.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var r in e)n.o(e,r)&&!n.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t;n.g.importScripts&&(t=n.g.location+"");var e=n.g.document;if(!t&&e&&(e.currentScript&&(t=e.currentScript.src),!t)){var r=e.getElementsByTagName("script");if(r.length)for(var o=r.length-1;o>-1&&!t;)t=r[o--].src}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=t})(),n.nc=void 0,(()=>{var t=n(379),e=n.n(t),r=n(795),o=n.n(r),c=n(569),a=n.n(c),i=n(565),s=n.n(i),d=n(216),l=n.n(d),p=n(589),u=n.n(p),A=n(426),m={};m.styleTagTransform=u(),m.setAttributes=s(),m.insert=a().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=l(),e()(A.Z,m),A.Z&&A.Z.locals&&A.Z.locals;let f=[];const h=t=>{f.splice(t,1),console.log(f)},E=(t,e)=>{f[t].dueDate=e,console.log(f)};let C=[];const x=(t,e,n)=>({description:t,checklist:e,dueDate:n}),v=t=>C[t].projectName,g=t=>C[t],b=function(t){const e=(t=>{let e=[];return{projectName:t,toDoArray:e,addProjectTodo:function(t,e){const n=x(t,!1,"No date");return function(t,e){g(e).toDoArray.push(t)}(n,e),n},getProjectTodoDescription:t=>e[t].description,removeProjectTodo:t=>{e.splice(t,1),console.log(C)},changeProjectTodoDate:(t,n)=>{e[t].dueDate=n,console.log(C)},checkStatus:t=>{0==e[t].checklist?(e[t].checklist=!0,console.log(e)):(e[t].checklist=!1,console.log(e))},getProjectTodoDate:t=>e[t].dueDate}})(t);return C.push(e),e},y=n.p+"c2d7c6f2e649fa966a77.svg",k=n.p+"6af010327c10a0167290.svg",L=function(){const t=document.querySelector(".content"),e=document.createElement("h1");e.classList.add("title-name"),e.textContent="Inbox";const n=document.createElement("div");n.classList.add("tasks-list");const r=document.createElement("button");r.classList.add("button-add-task"),r.textContent="+ Add Task";const o=document.createElement("div");o.classList.add("task-popup");const c=document.createElement("input");c.setAttribute("type","text"),c.classList.add("input-popup"),o.appendChild(c);const a=document.createElement("div");a.classList.add("task-popup-buttons"),o.appendChild(a);const i=document.createElement("button");i.classList.add("add-button-popup"),i.textContent="Add";const s=document.createElement("button");return s.classList.add("cancel-button-popup"),s.textContent="Cancel",a.appendChild(i),a.appendChild(s),t.appendChild(e),t.appendChild(n),t.appendChild(r),t.appendChild(o),i.addEventListener("click",(()=>{B(),w()})),t},B=function(){!function(t){const e=((t,e,n)=>({description:t,checklist:!1,dueDate:"No date"}))(t);f.push(e),console.log(f)}(document.querySelector(".input-popup").value)};function j(t){for(;t.firstChild;)t.removeChild(t.firstChild)}const w=function(){const t=document.querySelector(".tasks-list");j(t);for(let e=0;e<f.length;e++){const n=document.createElement("div");n.classList.add("task-container"),n.dataset.indexNumber=f.indexOf(f[e]);const r=document.createElement("p");r.classList.add("task-content"),r.textContent=f[e].description;const o=new Image;o.src=y,o.classList.add("fa-circle"),o.addEventListener("click",(()=>{var t;0==f[t=e].checklist?(f[t].checklist=!0,console.log(f)):(f[t].checklist=!1,console.log(f)),w()}));const c=document.createElement("input");c.setAttribute("type","date"),c.classList.add("input-date"),c.addEventListener("click",(()=>{E(e,c.value),w()}));const a=document.createElement("p");a.classList.add("date"),a.textContent=f[e].dueDate,a.addEventListener("click",(()=>{N(n)}));const i=new Image;i.src=k,i.classList.add("fa-xmark"),i.addEventListener("click",(()=>{h(e),w()})),0==f[e].checklist?n.classList.remove("strike"):n.classList.add("strike"),n.appendChild(o),n.appendChild(r),n.appendChild(a),n.appendChild(c),n.appendChild(i),t.appendChild(n)}},S=function(){const t=document.querySelector(".projects-list");j(t);for(let e=0;e<C.length;e++){const n=document.createElement("div");n.classList.add("project-container"),n.dataset.indexNumber=C.indexOf(C[e]);const r=document.createElement("button");r.classList.add("project-content"),r.textContent=v(e),r.addEventListener("click",(()=>{D.currentProject=n.dataset.indexNumber,P(),q(),console.log(D.currentProject)}));const o=new Image;o.src=k,o.classList.add("fa-xmark"),o.addEventListener("click",(()=>{var t;t=e,C.splice(t,1),console.log(C),S()})),n.appendChild(r),n.appendChild(o),t.appendChild(n)}},P=function(){const t=document.querySelector(".content");t.textContent="";const e=document.createElement("h1");e.classList.add("title-name"),e.textContent=v(D.currentProject);const n=document.createElement("div");n.classList.add("tasks-list");const r=document.createElement("button");r.classList.add("button-add-task"),r.textContent="+ Add Task";const o=document.createElement("div");o.classList.add("task-popup");const c=document.createElement("input");c.setAttribute("type","text"),c.classList.add("input-popup"),o.appendChild(c);const a=document.createElement("div");a.classList.add("task-popup-buttons"),o.appendChild(a);const i=document.createElement("button");i.classList.add("add-button-popup"),i.textContent="Add";const s=document.createElement("button");return s.classList.add("cancel-button-popup"),s.textContent="Cancel",a.appendChild(i),a.appendChild(s),t.appendChild(e),t.appendChild(n),t.appendChild(r),t.appendChild(o),i.addEventListener("click",(()=>{T(),q(),console.log(C)})),t},T=function(){const t=document.querySelector(".input-popup").value;C[D.currentProject].addProjectTodo(t,D.currentProject)},q=function(){const t=document.querySelector(".tasks-list");j(t);for(let e=0;e<C[D.currentProject].toDoArray.length;e++){const n=document.createElement("div");n.classList.add("task-container"),n.dataset.indexNumber=C[D.currentProject].toDoArray.indexOf(C[D.currentProject].toDoArray[e]);const r=document.createElement("p");r.classList.add("task-content"),r.textContent=C[D.currentProject].getProjectTodoDescription(e);const o=new Image;o.src=y,o.classList.add("fa-circle"),o.addEventListener("click",(()=>{C[D.currentProject].checkStatus(e),q()}));const c=document.createElement("p");c.classList.add("date"),c.textContent=C[D.currentProject].getProjectTodoDate(e);const a=new Image;a.src=k,a.classList.add("fa-xmark"),a.addEventListener("click",(()=>{C[D.currentProject].removeProjectTodo(e),q()})),0==C[D.currentProject].toDoArray[e].checklist?n.classList.remove("strike"):n.classList.add("strike"),n.appendChild(o),n.appendChild(r),n.appendChild(c),n.appendChild(a),t.appendChild(n)}},D=function(){L();const t=document.querySelector("#button-inbox"),e=document.querySelector("#button-today"),n=document.querySelector("#button-week"),r=document.querySelector(".add-project-popup");t.addEventListener("click",(()=>{document.querySelector(".content").textContent="",L(),w()})),e.addEventListener("click",(()=>{document.querySelector(".content").textContent="",function(){const t=document.querySelector(".content"),e=document.createElement("h1");e.classList.add("title-name"),e.textContent="Today";const n=document.createElement("div");n.classList.add("tasks-list"),t.appendChild(e),t.appendChild(n)}()})),n.addEventListener("click",(()=>{document.querySelector(".content").textContent="",function(){const t=document.querySelector(".content"),e=document.createElement("h1");e.classList.add("title-name"),e.textContent="This week";const n=document.createElement("div");n.classList.add("tasks-list"),t.appendChild(e),t.appendChild(n)}()})),r.addEventListener("click",(()=>{!function(){const t=document.querySelector(".project-input-popup").value;b(t),console.log(C)}(),S()}))};function N(t){const e=t.children[2],n=t.children[3];e.classList.add("active"),n.classList.add("active")}D()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,